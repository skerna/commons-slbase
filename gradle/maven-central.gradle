/*
 * Copyright (c)  2020  SKERNA
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

/*
 * Gradle shareable properties publication
 */
ext {
    organizationName = "SKERNA"
    bringrayOrg = "skerna"
    bintrayRepo = 'maven'
    bintrayName = project.name
    publishedGroupId = project.group
    libraryName =  project.name
    artifact = project.name
    libraryDescription = 'This library provide slbase multiplatform.'

    siteUrl = 'https://gitlab.com/skerna/libs/commons-slbase'
    gitUrl = 'https://gitlab.com/skerna/libs/commons-slbase'


    developerId = 'ronfravi'
    developerName = 'Ronald CÃ¡rdenas'
    developerEmail = 'rfcardenas92@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

// ------- metadata for Maven Central

def pomConfig = {
    licenses {
        license {
            name licenseName
            url licenseUrl
            distribution "repo"
        }
    }
    developers {
        developer {
            id "Skerna"
            name "$organizationName TEAM"
            organization organizationName
            organizationUrl "https://skerna.gitlab.io/homepage/"
        }
        
    }
    scm {
        url gitUrl
    }

}

project.ext.configureMavenCentralMetadata = {
    def root = it.asNode()
    // NOTE: Don't try to move top-level things (especially "description") to the pomConfig block
    //       because they would resolve incorrectly to top-level project properties in Gradle/Groovy
    root.appendNode('name', project.name)
    root.appendNode('description', libraryDescription)
    root.appendNode('url', gitUrl)
    root.children().last() + pomConfig
}
